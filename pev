# Github: https://github.com/aderchox/pev
# "pev" is the way to manage personal-environment-variables
# Author [ Mojtabaa Vahdati ] --> Please email me at [ aderchox@gmail.com ] for any feedback.

pev(){
	trap 'cleanup' EXIT RETURN INT TERM

	cleanup() {
		if [[ -d "${pev_temp_dir}" ]]
			then
				if [[ ! -d ~/tmp || $no_user_temp_dir == true ]]
				then
					rm -rf $user_temp_dir
				else
					rm -rf $pev_temp_dir
				fi
		fi
	}

	local pev_version=0.9.1
	local pev_version_date="$(date '+%B-%Y')"
	local pev_list_file=~/.pev

	if [[ ! -e ~/tmp || ! -d ~/tmp ]]
	then
		test ! -e ~/tmp && no_user_temp_dir=true && user_temp_dir=~/tmp;
		test -e ~/tmp && ! -d ~/tmp && no_user_temp_dir=true && user_temp_dir=~/tmp.$RANDOM;
	else
		no_user_temp_dir=false && user_temp_dir=~/tmp
	fi
	pev_temp_dir=$user_temp_dir/pev_temp
	local pev_user=$(whoami)
	umask 077 && sudo -u $pev_user mkdir -p $pev_temp_dir

	case $1 in
	init)
		touch $pev_list_file
		source $pev_list_file
	;;
	add)
		local pevname=pev_$2
		if grep -Pq "[^\w\d_-]" <<< $pevname; then echo -e -n "\tError: Entered name contains illegal characters.\n"; return; fi
		if [[ ! -z "${!pevname}" ]]; then echo -e -n "\tError: A variable with entered name exists already.\n\t$pevname="; eval "echo \$${pevname}"; return; fi
		if [[ $# != 3 ]]; then echo -e -n "\tError: Either name or value is not entered. Create a pev variable like this: \"pev add NAME VALUE\"\n\""; return; fi
		local pevval=$(sed 's| |?|g' <<< "$3")
		if grep -q "[=\"\']" <<< $pevval; then echo -e -n "\tError: Entered value contains illegal characters.\n"; return; fi
		echo "export pev_$2=\"$pevval\"" | sudo tee -a $pev_list_file > /dev/null
		echo "environment variable \"pev_$2\" added successfully. \"pev show\" to see the list of pev variables."
		source $pev_list_file
	;;
	remove)
		if [[ ! -e $pev_list_file ]]; then pev init; fi
		sudo touch $pev_temp_dir/pevtemp $pev_temp_dir/pevtemp2
		sudo chmod u+x $pev_temp_dir/pevtemp $pev_temp_dir/pevtemp2
		sudo chown $pev_user:$pev_user $pev_temp_dir/pevtemp2
		local pevremovebool=false
		while read -r line
			do
				if [[ ! $line =~ "export pev_$2=" ]]
				then
					echo "$line"
				else
					pevremovebool=true
				fi
			done <$pev_list_file > >(sudo tee -a $pev_temp_dir/pevtemp > /dev/null)
			if [[ $pevremovebool = true ]]
			then
				echo "unset pev_$2" | sudo tee $pev_temp_dir/pevtemp2 > /dev/null
				trap '' RETURN EXIT
				source $pev_temp_dir/pevtemp2
				trap 'cleanup' RETURN EXIT
				sudo rm -f $pev_temp_dir/pevtemp2
				echo -e "\tpev variable removed successfully"
			else
				echo -e "\tError: pev variable does not exist."
			fi
		sudo mv $pev_temp_dir/pevtemp $pev_list_file
		sudo chown $pev_user:$pev_user $pev_list_file
		source $pev_list_file
	;;
	show)
		if [[ ! -e $pev_list_file ]]; then pev init; fi
		echo -e '\n'
		touch $pev_temp_dir/pev_temp1
		echo -e "NAMES\n----------" > $pev_temp_dir/pev_temp1
		touch $pev_temp_dir/pev_temp2
		echo -e "VALUES\n----------" > $pev_temp_dir/pev_temp2
		local pev_names_array=( $(grep -Poh "[\w\d_\-]+=[^=]+" $pev_list_file | cut -d "=" -f 1) )
		echo "${pev_names_array[@]}" | sed "s/ /\n/g" >> $pev_temp_dir/pev_temp1
		sed -i "s/^/   |   /" $pev_temp_dir/pev_temp1
		local pev_values_array=( $(grep -Poh "[\w\d_\-]+=[\w\W\=]+" $pev_list_file | cut -d "=" -f 2) )
		echo "${pev_values_array[@]}" | sed "s/ /\n/g" >> $pev_temp_dir/pev_temp2
		paste $pev_temp_dir/pev_temp1 $pev_temp_dir/pev_temp2 | expand -t $(( $(wc -L < $pev_temp_dir/pev_temp1) + 3 ))
		rm $pev_temp_dir/pev_temp1 $pev_temp_dir/pev_temp2
		echo -e '\n'
	;;
	edit)
        if [[ ! -e $pev_list_file ]]; then pev init; fi
        if [[ $# == 1 ]]
        then
            sudo nano $pev_list_file
        else
            if [[ $# != 3 ]]; then echo -e -n "\tError: Either name or value is not entered. Create a pev variable like this: \"pev add NAME VALUE\"\n\""; return; fi
            pev_newval=$(sed 's| |?|g' <<< "$3")
            if grep -q "[=\"\']" <<< $pev_newval; then echo -e -n "\tError: Entered value contains illegal characters.\n"; return; fi
            if grep -Pq "pev_$2\=" $pev_list_file
            then
                pev_oldval=$(grep -Poh "pev_$2=[^=]+" $pev_list_file | cut -d "=" -f 2)
                sed -i "s'$pev_oldval'\"$pev_newval\"'" $pev_list_file
            else
                echo -e "\tError: No pev variable with the entered name exists."
                return
            fi
        fi
		source $pev_list_file
	;;
	help|--help)
		echo -e "\n\tPEV-Version-"$pev_version" "$pev_version_date"\n"
		echo -e "\n\tpev [ <NAME> | add <NAME> <VALUE> | remove <NAME> | show | edit <NAME> <NEW-VALUE> | edit | help ]\n"
		echo -e "\tpev <NAME>: \n\t\techoes the value of the Personal Environment Variable named <NAME>\n"
		echo -e "\tpev add <NAME> <VALUE>:\n\t\tAdds a Personal Environment Variable\n"
		echo -e "\tpev remove <NAME>:\n\t\tRemoves a Personal Environment Variable\n"
		echo -e "\tpev show:\n\t\tShows a list of Personal Environment Variables\n"
		echo -e "\tpev edit <NAME> <NEW-VALUE>:\n\t\tChange the value of a predefined pev variable to a <NEW-VALUE>\n"
		echo -e "\tpev edit:\n\t\tEdit the list of Personal Environment Variables manually(NOT RECOMMENDED)\n"
		echo -e "\n\tAuthor [ Mojtabaa Vahdati ] --> Please email me at [ aderchox@gmail.com ] for any feedback.\n"
	;;
	version|--version)
		echo -e "\n\tPEV-Version-"$pev_version" "$pev_version_date"\n"
	;;
	error)
		echo -e "\n\tError! Please use pev according to this:\n\tpev [ <NAME> | add <NAME> <VALUE> | remove <NAME> | show | edit <NAME> <NEW-VALUE> | edit | help ]\n"
	;;
	*)
		local pevreq=pev_$1
		if grep -Pq "$pevreq=" $pev_list_file
		then
			eval "printf '%s\n' \"\$pev_$1\""
		else
			pev error
		fi
	;;
	esac
}
